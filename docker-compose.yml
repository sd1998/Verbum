version: "3.3"
services:
  zookeeper:
    image: jplock/zookeeper
    restart: always
    ports:
      - target: 2181
        published: 2181
  eureka:
    restart: always
    build:
      context: ./external/eureka
      dockerfile: Dockerfile
    ports:
      - target: 8761
        published: 8761
  nginx:
    image: nginx:1.13.11
    ports:
      - target: 9000
        published: 9000
    volumes:
      - ./external/nginx/nginx.conf:/etc/nginx/nginx.conf
  elasticsearch:
    build:
      context: ./external/elk/elasticsearch/
      args:
        ELK_VERSION: 7.4.2
    volumes:
      - type: bind
        source: ./external/elk/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
    ports:
      - target: 9200
        published: 9200
      - target: 9300
        published: 9300
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: temppassword
    networks:
      - elk
  logstash:
    build:
      context: ./external/elk/logstash/
      args:
        ELK_VERSION: 7.4.2
    volumes:
      - type: bind
        source: ./external/elk/logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./external/elk/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - target: 5001
        published: 5001
      - target: 9600
        published: 9600
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch
  kibana:
    build:
      context: ./external/elk/kibana/
      args:
        ELK_VERSION: 7.4.2
    volumes:
      - type: bind
        source: ./external/elk/kibana/config/kibana.yml
        target: /external/usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - target: 5601
        published: 5601
    networks:
      - elk
    depends_on:
      - elasticsearch
  notification:
    restart: always
    build:
      context: ./notif
      dockerfile: Dockerfile
    # deploy:
    #   mode: replicated
    #   replicas: 3
    ports:
      - target: 8000
        published: 8000
    depends_on:
      - zookeeper
      - eureka
      - nginx
  fls:
    restart: always
    build:
      context: ./notif
      dockerfile: Dockerfile
      #deploy:
      #  mode: replicated
      #  replicas:
    ports:
      - target: 8030
        published: 8030
    depends_on:
      - notification
  learning:
    restart: always
    build:
      context: ./external/learning
      dockerfile: Dockerfile
    ports:
      - target: 8881
        published: 8881
    depends_on:
      - fls
networks:
  elk:
    driver: bridge
